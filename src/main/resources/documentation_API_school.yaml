openapi: 3.0.2
info:
  title: Documentation API school
  description: Documentation API school
  contact:
    name: Michael Spigolon
    email: michaelspig@gmail.com
  version: v1
tags:
  - name: Student
    description: Student Found By SerialNumber
paths:
  /student/{serialNumber}:
    get:
      summary: Get student by serial number
      operationId: getStudentBySerialNumber
      tags:
        - Student
      parameters:
        - name: serialNumber
          in: path
          required: true
          description: Serial number of the student
          schema:
            type: string
      responses:
        '200':
          description: Student found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEntity'
        '404':
          description: Student not found
        '409':
          description: More than one student found

  /student/all:
    get:
      summary: Get all students
      operationId: getAllStudents
      tags:
        - Student
      responses:
        '200':
          description: List of all students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEntity'

  /student/add:
    post:
      summary: Add students
      operationId: addStudents
      tags:
        - Student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Students added successfully

  /student/update:
    put:
      summary: Update student
      operationId: updateStudent
      tags:
        - Student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Student updated successfully

  /student/delete/{serialNumber}:
    delete:
      summary: Delete student by serial number
      operationId: deleteStudentBySerialNumber
      tags:
        - Student
      parameters:
        - name: serialNumber
          in: path
          required: true
          description: Serial number of the student to delete
          schema:
            type: string
      responses:
        '200':
          description: Student deleted successfully

  /student/delete/all:
    delete:
      summary: Delete all students
      operationId: deleteAllStudents
      tags:
        - Student
      responses:
        '200':
          description: All students deleted successfully

components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: John Doe
        city:
          type: string
          example: New York
        age:
          type: string
          example: 25
        school:
          type: string
          example: XYZ High School
        serialNumber:
          type: string
          example: ABC123

    StudentEntity:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: John Doe
        city:
          type: string
          example: New York
        age:
          type: string
          example: 25
        school:
          type: string
          example: XYZ High School
        serialNumber:
          type: string
          example: ABC123
